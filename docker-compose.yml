services:
  documentation:
    build: ./docs
    ports: 
      - "3002:80"

  app:
    build: ./backand
    ports:
      - "3000:3000"
    depends_on:
      - db
      - donorBb
    env_file: ./backand/.env
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}
      - DONOR_DATABASE_URL=postgresql://${DONOR_DATABASE_USER}:${DONOR_DATABASE_PASSWORD}@donorBb:5432/${DONOR_DATABASE_NAME}
      - DONOR_DATABASE_PORT=5432

  frontend:
    build: ./frontend
    ports:
      - "3001:3000"
    depends_on:
      - app
    env_file: ./frontend/.env
    environment:
      - NEXT_PUBLIC_BASE_URL=/api

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt/:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - app
      - documentation

  db:
    image: postgres:16
    ports:
      - "5432:5432"
    env_file:  ./backand/.env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

  donorBb:
    image: postgres:16
    ports:
      - "5433:5432"
    env_file: ./backand/.env
    environment:
      - POSTGRES_USER=${DONOR_DATABASE_USER}
      - POSTGRES_PASSWORD=${DONOR_DATABASE_PASSWORD}
      - POSTGRES_DB=${DONOR_DATABASE_NAME}
    volumes:
      - donor_data:/var/lib/postgresql/data


volumes:
  db_data:
  donor_data:
